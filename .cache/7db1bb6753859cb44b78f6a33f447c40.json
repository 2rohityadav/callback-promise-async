{"id":"src\\promise_all.js","dependencies":[{"name":"C:\\Users\\rohityadav\\Desktop\\Drive\\workspace\\workspace_javascript\\asyncronous\\package.json","includedInParent":true,"mtime":1533970569009}],"generated":{"js":"document.getElementById(\"app\").innerHTML = \"\\n<h1>Promise.all([\\uD83D\\uDE31])</h1>\\n<br />\\n<div id=\\\"post\\\"></div>\\n\";\n\n// const promise1 = Promise.resolve(\"Wow made promise!\");\n// const promise2 = 10;\n// const promise3 = new Promise((resolve, reject) => {\n//   setTimeout(resolve, 2000, \"GoodBye\");\n// });\n\n// Promise.all([promise1, promise2, promise3]).then(values => {\n//   console.log(values);\n// });\n\n// ? Added one more promise\n\n// const promise1 = Promise.resolve(\"Wow made promise!\");\n// const promise2 = 10;\n// const promise3 = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     resolve ? resolve(\"promise resolved :-)\") : reject(\"promise rejected :-(\");\n//   }, 2000);\n// });\n\n// const promise4 = fetch(\"https://jsonplaceholder.typicode.com/users\").then(res =>\n//   res.json()\n// );\n\n// Promise.all([promise1, promise2, promise3, promise4]).then(values => {\n//   console.log(values);\n// });\n\n//  ? Another example - Handling Multiple JavaScript Promises Even if Some Fail\n\n// var p1 = new Promise(function(resolve, reject) {\n//   resolve(\"one\");\n// });\n\n// var p2 = new Promise(function(resolve, reject) {\n//   reject(\"p2 rejected\");\n// });\n\n// var p3 = new Promise(function(resolve, reject) {\n//   resolve(\"three\");\n// });\n\n// Promise.all([p1, p2, p3])\n//   .then(function(res) {\n//     console.log(\"Promise.all\", res);\n//   })\n//   .catch(function(err) {\n//     console.error(\"Promise.all error:- \", err);\n//   });\n\n// ? another example by fixing reslove Promises\n\nfunction apiRequest(url) {\n  return new Promise(function (resolve, reject) {\n    //our fake api simply returns the string passed as the 'url'\n    if (url) {\n      resolve(url);\n    } else {\n      //if no url is passed to the function, it will fail\n      reject(\"apiRequest failed!\");\n    }\n  }).catch(function (err) {\n    //return error;\n    return err;\n  }); //! if catched here then will return resolved promised with failed promises.\n  // ! otherwise it will reject and give an error for all.\n}\n\nvar p1 = apiRequest(\"urlOne\");\n\n//this one will fail\nvar p2 = apiRequest();\n\nvar p3 = apiRequest(\"urlThree\");\n\nPromise.all([p1, p2, p3]).then(function (res) {\n  console.log(\"Promise.all\", res);\n}).catch(function (err) {\n  console.error(\"err\", err);\n});\n\n//Promise.all [ 'urlOne', 'apiRequest failed!', 'urlThree' ]","map":{"mappings":[{"name":"document","generated":{"line":1,"column":0},"source":"src\\promise_all.js","original":{"line":1,"column":0}},{"name":"getElementById","generated":{"line":1,"column":9},"source":"src\\promise_all.js","original":{"line":1,"column":9}},{"generated":{"line":1,"column":23},"source":"src\\promise_all.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":24},"source":"src\\promise_all.js","original":{"line":1,"column":24}},{"generated":{"line":1,"column":29},"source":"src\\promise_all.js","original":{"line":1,"column":0}},{"name":"innerHTML","generated":{"line":1,"column":31},"source":"src\\promise_all.js","original":{"line":1,"column":31}},{"generated":{"line":1,"column":40},"source":"src\\promise_all.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"src\\promise_all.js","original":{"line":7,"column":0}},{"generated":{"line":4,"column":0},"source":"src\\promise_all.js","original":{"line":8,"column":0}},{"generated":{"line":5,"column":0},"source":"src\\promise_all.js","original":{"line":9,"column":0}},{"generated":{"line":6,"column":0},"source":"src\\promise_all.js","original":{"line":10,"column":0}},{"generated":{"line":7,"column":0},"source":"src\\promise_all.js","original":{"line":11,"column":0}},{"generated":{"line":9,"column":0},"source":"src\\promise_all.js","original":{"line":13,"column":0}},{"generated":{"line":10,"column":0},"source":"src\\promise_all.js","original":{"line":14,"column":0}},{"generated":{"line":11,"column":0},"source":"src\\promise_all.js","original":{"line":15,"column":0}},{"generated":{"line":13,"column":0},"source":"src\\promise_all.js","original":{"line":17,"column":0}},{"generated":{"line":15,"column":0},"source":"src\\promise_all.js","original":{"line":19,"column":0}},{"generated":{"line":16,"column":0},"source":"src\\promise_all.js","original":{"line":20,"column":0}},{"generated":{"line":17,"column":0},"source":"src\\promise_all.js","original":{"line":21,"column":0}},{"generated":{"line":18,"column":0},"source":"src\\promise_all.js","original":{"line":22,"column":0}},{"generated":{"line":19,"column":0},"source":"src\\promise_all.js","original":{"line":23,"column":0}},{"generated":{"line":20,"column":0},"source":"src\\promise_all.js","original":{"line":24,"column":0}},{"generated":{"line":21,"column":0},"source":"src\\promise_all.js","original":{"line":25,"column":0}},{"generated":{"line":23,"column":0},"source":"src\\promise_all.js","original":{"line":27,"column":0}},{"generated":{"line":24,"column":0},"source":"src\\promise_all.js","original":{"line":28,"column":0}},{"generated":{"line":25,"column":0},"source":"src\\promise_all.js","original":{"line":29,"column":0}},{"generated":{"line":27,"column":0},"source":"src\\promise_all.js","original":{"line":31,"column":0}},{"generated":{"line":28,"column":0},"source":"src\\promise_all.js","original":{"line":32,"column":0}},{"generated":{"line":29,"column":0},"source":"src\\promise_all.js","original":{"line":33,"column":0}},{"generated":{"line":31,"column":0},"source":"src\\promise_all.js","original":{"line":35,"column":0}},{"generated":{"line":33,"column":0},"source":"src\\promise_all.js","original":{"line":37,"column":0}},{"generated":{"line":34,"column":0},"source":"src\\promise_all.js","original":{"line":38,"column":0}},{"generated":{"line":35,"column":0},"source":"src\\promise_all.js","original":{"line":39,"column":0}},{"generated":{"line":37,"column":0},"source":"src\\promise_all.js","original":{"line":41,"column":0}},{"generated":{"line":38,"column":0},"source":"src\\promise_all.js","original":{"line":42,"column":0}},{"generated":{"line":39,"column":0},"source":"src\\promise_all.js","original":{"line":43,"column":0}},{"generated":{"line":41,"column":0},"source":"src\\promise_all.js","original":{"line":45,"column":0}},{"generated":{"line":42,"column":0},"source":"src\\promise_all.js","original":{"line":46,"column":0}},{"generated":{"line":43,"column":0},"source":"src\\promise_all.js","original":{"line":47,"column":0}},{"generated":{"line":45,"column":0},"source":"src\\promise_all.js","original":{"line":49,"column":0}},{"generated":{"line":46,"column":0},"source":"src\\promise_all.js","original":{"line":50,"column":0}},{"generated":{"line":47,"column":0},"source":"src\\promise_all.js","original":{"line":51,"column":0}},{"generated":{"line":48,"column":0},"source":"src\\promise_all.js","original":{"line":52,"column":0}},{"generated":{"line":49,"column":0},"source":"src\\promise_all.js","original":{"line":53,"column":0}},{"generated":{"line":50,"column":0},"source":"src\\promise_all.js","original":{"line":54,"column":0}},{"generated":{"line":51,"column":0},"source":"src\\promise_all.js","original":{"line":55,"column":0}},{"generated":{"line":53,"column":0},"source":"src\\promise_all.js","original":{"line":57,"column":0}},{"generated":{"line":55,"column":0},"source":"src\\promise_all.js","original":{"line":59,"column":0}},{"name":"apiRequest","generated":{"line":55,"column":9},"source":"src\\promise_all.js","original":{"line":59,"column":9}},{"generated":{"line":55,"column":19},"source":"src\\promise_all.js","original":{"line":59,"column":0}},{"name":"url","generated":{"line":55,"column":20},"source":"src\\promise_all.js","original":{"line":59,"column":20}},{"generated":{"line":55,"column":23},"source":"src\\promise_all.js","original":{"line":59,"column":0}},{"generated":{"line":55,"column":25},"source":"src\\promise_all.js","original":{"line":59,"column":25}},{"generated":{"line":56,"column":0},"source":"src\\promise_all.js","original":{"line":60,"column":2}},{"generated":{"line":56,"column":9},"source":"src\\promise_all.js","original":{"line":60,"column":9}},{"name":"Promise","generated":{"line":56,"column":13},"source":"src\\promise_all.js","original":{"line":60,"column":13}},{"generated":{"line":56,"column":20},"source":"src\\promise_all.js","original":{"line":60,"column":9}},{"generated":{"line":56,"column":21},"source":"src\\promise_all.js","original":{"line":60,"column":21}},{"name":"resolve","generated":{"line":56,"column":31},"source":"src\\promise_all.js","original":{"line":60,"column":30}},{"generated":{"line":56,"column":38},"source":"src\\promise_all.js","original":{"line":60,"column":21}},{"name":"reject","generated":{"line":56,"column":40},"source":"src\\promise_all.js","original":{"line":60,"column":39}},{"generated":{"line":56,"column":46},"source":"src\\promise_all.js","original":{"line":60,"column":21}},{"generated":{"line":56,"column":48},"source":"src\\promise_all.js","original":{"line":60,"column":47}},{"generated":{"line":57,"column":0},"source":"src\\promise_all.js","original":{"line":61,"column":4}},{"generated":{"line":58,"column":0},"source":"src\\promise_all.js","original":{"line":62,"column":4}},{"name":"url","generated":{"line":58,"column":8},"source":"src\\promise_all.js","original":{"line":62,"column":8}},{"generated":{"line":58,"column":11},"source":"src\\promise_all.js","original":{"line":62,"column":4}},{"generated":{"line":58,"column":13},"source":"src\\promise_all.js","original":{"line":62,"column":13}},{"name":"resolve","generated":{"line":59,"column":0},"source":"src\\promise_all.js","original":{"line":63,"column":6}},{"name":"url","generated":{"line":59,"column":14},"source":"src\\promise_all.js","original":{"line":63,"column":14}},{"generated":{"line":59,"column":17},"source":"src\\promise_all.js","original":{"line":63,"column":6}},{"generated":{"line":60,"column":0},"source":"src\\promise_all.js","original":{"line":64,"column":5}},{"generated":{"line":60,"column":5},"source":"src\\promise_all.js","original":{"line":62,"column":4}},{"generated":{"line":60,"column":11},"source":"src\\promise_all.js","original":{"line":64,"column":11}},{"generated":{"line":61,"column":0},"source":"src\\promise_all.js","original":{"line":65,"column":6}},{"name":"reject","generated":{"line":62,"column":0},"source":"src\\promise_all.js","original":{"line":66,"column":6}},{"generated":{"line":62,"column":13},"source":"src\\promise_all.js","original":{"line":66,"column":13}},{"generated":{"line":62,"column":33},"source":"src\\promise_all.js","original":{"line":66,"column":6}},{"generated":{"line":63,"column":0},"source":"src\\promise_all.js","original":{"line":67,"column":5}},{"generated":{"line":64,"column":0},"source":"src\\promise_all.js","original":{"line":68,"column":3}},{"generated":{"line":64,"column":3},"source":"src\\promise_all.js","original":{"line":60,"column":9}},{"name":"catch","generated":{"line":64,"column":5},"source":"src\\promise_all.js","original":{"line":68,"column":5}},{"generated":{"line":64,"column":10},"source":"src\\promise_all.js","original":{"line":60,"column":9}},{"generated":{"line":64,"column":11},"source":"src\\promise_all.js","original":{"line":68,"column":11}},{"name":"err","generated":{"line":64,"column":21},"source":"src\\promise_all.js","original":{"line":68,"column":20}},{"generated":{"line":64,"column":24},"source":"src\\promise_all.js","original":{"line":68,"column":11}},{"generated":{"line":64,"column":26},"source":"src\\promise_all.js","original":{"line":68,"column":25}},{"generated":{"line":65,"column":0},"source":"src\\promise_all.js","original":{"line":69,"column":4}},{"generated":{"line":66,"column":0},"source":"src\\promise_all.js","original":{"line":70,"column":4}},{"name":"err","generated":{"line":66,"column":11},"source":"src\\promise_all.js","original":{"line":70,"column":11}},{"generated":{"line":66,"column":14},"source":"src\\promise_all.js","original":{"line":70,"column":4}},{"generated":{"line":67,"column":0},"source":"src\\promise_all.js","original":{"line":71,"column":3}},{"generated":{"line":67,"column":3},"source":"src\\promise_all.js","original":{"line":60,"column":9}},{"generated":{"line":67,"column":4},"source":"src\\promise_all.js","original":{"line":60,"column":2}},{"generated":{"line":67,"column":5},"source":"src\\promise_all.js","original":{"line":59,"column":25}},{"generated":{"line":67,"column":6},"source":"src\\promise_all.js","original":{"line":71,"column":6}},{"generated":{"line":68,"column":0},"source":"src\\promise_all.js","original":{"line":72,"column":2}},{"generated":{"line":69,"column":0},"source":"src\\promise_all.js","original":{"line":73,"column":1}},{"generated":{"line":71,"column":0},"source":"src\\promise_all.js","original":{"line":75,"column":0}},{"name":"p1","generated":{"line":71,"column":4},"source":"src\\promise_all.js","original":{"line":75,"column":4}},{"name":"apiRequest","generated":{"line":71,"column":9},"source":"src\\promise_all.js","original":{"line":75,"column":9}},{"generated":{"line":71,"column":20},"source":"src\\promise_all.js","original":{"line":75,"column":20}},{"generated":{"line":71,"column":28},"source":"src\\promise_all.js","original":{"line":75,"column":9}},{"generated":{"line":71,"column":29},"source":"src\\promise_all.js","original":{"line":75,"column":0}},{"generated":{"line":73,"column":0},"source":"src\\promise_all.js","original":{"line":77,"column":0}},{"generated":{"line":74,"column":0},"source":"src\\promise_all.js","original":{"line":78,"column":0}},{"name":"p2","generated":{"line":74,"column":4},"source":"src\\promise_all.js","original":{"line":78,"column":4}},{"name":"apiRequest","generated":{"line":74,"column":9},"source":"src\\promise_all.js","original":{"line":78,"column":9}},{"generated":{"line":74,"column":21},"source":"src\\promise_all.js","original":{"line":78,"column":0}},{"generated":{"line":76,"column":0},"source":"src\\promise_all.js","original":{"line":80,"column":0}},{"name":"p3","generated":{"line":76,"column":4},"source":"src\\promise_all.js","original":{"line":80,"column":4}},{"name":"apiRequest","generated":{"line":76,"column":9},"source":"src\\promise_all.js","original":{"line":80,"column":9}},{"generated":{"line":76,"column":20},"source":"src\\promise_all.js","original":{"line":80,"column":20}},{"generated":{"line":76,"column":30},"source":"src\\promise_all.js","original":{"line":80,"column":9}},{"generated":{"line":76,"column":31},"source":"src\\promise_all.js","original":{"line":80,"column":0}},{"name":"Promise","generated":{"line":78,"column":0},"source":"src\\promise_all.js","original":{"line":82,"column":0}},{"name":"all","generated":{"line":78,"column":8},"source":"src\\promise_all.js","original":{"line":82,"column":8}},{"generated":{"line":78,"column":11},"source":"src\\promise_all.js","original":{"line":82,"column":0}},{"generated":{"line":78,"column":12},"source":"src\\promise_all.js","original":{"line":82,"column":12}},{"name":"p1","generated":{"line":78,"column":13},"source":"src\\promise_all.js","original":{"line":82,"column":13}},{"generated":{"line":78,"column":15},"source":"src\\promise_all.js","original":{"line":82,"column":12}},{"name":"p2","generated":{"line":78,"column":17},"source":"src\\promise_all.js","original":{"line":82,"column":17}},{"generated":{"line":78,"column":19},"source":"src\\promise_all.js","original":{"line":82,"column":12}},{"name":"p3","generated":{"line":78,"column":21},"source":"src\\promise_all.js","original":{"line":82,"column":21}},{"generated":{"line":78,"column":23},"source":"src\\promise_all.js","original":{"line":82,"column":12}},{"generated":{"line":78,"column":24},"source":"src\\promise_all.js","original":{"line":82,"column":0}},{"name":"then","generated":{"line":78,"column":26},"source":"src\\promise_all.js","original":{"line":83,"column":3}},{"generated":{"line":78,"column":30},"source":"src\\promise_all.js","original":{"line":82,"column":0}},{"generated":{"line":78,"column":31},"source":"src\\promise_all.js","original":{"line":83,"column":8}},{"name":"res","generated":{"line":78,"column":41},"source":"src\\promise_all.js","original":{"line":83,"column":17}},{"generated":{"line":78,"column":44},"source":"src\\promise_all.js","original":{"line":83,"column":8}},{"generated":{"line":78,"column":46},"source":"src\\promise_all.js","original":{"line":83,"column":22}},{"name":"console","generated":{"line":79,"column":0},"source":"src\\promise_all.js","original":{"line":84,"column":4}},{"name":"log","generated":{"line":79,"column":10},"source":"src\\promise_all.js","original":{"line":84,"column":12}},{"generated":{"line":79,"column":13},"source":"src\\promise_all.js","original":{"line":84,"column":4}},{"generated":{"line":79,"column":14},"source":"src\\promise_all.js","original":{"line":84,"column":16}},{"generated":{"line":79,"column":27},"source":"src\\promise_all.js","original":{"line":84,"column":4}},{"name":"res","generated":{"line":79,"column":29},"source":"src\\promise_all.js","original":{"line":84,"column":31}},{"generated":{"line":79,"column":32},"source":"src\\promise_all.js","original":{"line":84,"column":4}},{"generated":{"line":80,"column":0},"source":"src\\promise_all.js","original":{"line":85,"column":3}},{"generated":{"line":80,"column":1},"source":"src\\promise_all.js","original":{"line":82,"column":0}},{"name":"catch","generated":{"line":80,"column":3},"source":"src\\promise_all.js","original":{"line":86,"column":3}},{"generated":{"line":80,"column":8},"source":"src\\promise_all.js","original":{"line":82,"column":0}},{"generated":{"line":80,"column":9},"source":"src\\promise_all.js","original":{"line":86,"column":9}},{"name":"err","generated":{"line":80,"column":19},"source":"src\\promise_all.js","original":{"line":86,"column":18}},{"generated":{"line":80,"column":22},"source":"src\\promise_all.js","original":{"line":86,"column":9}},{"generated":{"line":80,"column":24},"source":"src\\promise_all.js","original":{"line":86,"column":23}},{"name":"console","generated":{"line":81,"column":0},"source":"src\\promise_all.js","original":{"line":87,"column":4}},{"name":"error","generated":{"line":81,"column":10},"source":"src\\promise_all.js","original":{"line":87,"column":12}},{"generated":{"line":81,"column":15},"source":"src\\promise_all.js","original":{"line":87,"column":4}},{"generated":{"line":81,"column":16},"source":"src\\promise_all.js","original":{"line":87,"column":18}},{"generated":{"line":81,"column":21},"source":"src\\promise_all.js","original":{"line":87,"column":4}},{"name":"err","generated":{"line":81,"column":23},"source":"src\\promise_all.js","original":{"line":87,"column":25}},{"generated":{"line":81,"column":26},"source":"src\\promise_all.js","original":{"line":87,"column":4}},{"generated":{"line":82,"column":0},"source":"src\\promise_all.js","original":{"line":88,"column":3}},{"generated":{"line":82,"column":1},"source":"src\\promise_all.js","original":{"line":82,"column":0}},{"generated":{"line":84,"column":0},"source":"src\\promise_all.js","original":{"line":90,"column":0}}],"sources":{"src\\promise_all.js":"document.getElementById(\"app\").innerHTML = `\r\n<h1>Promise.all([😱])</h1>\r\n<br />\r\n<div id=\"post\"></div>\r\n`;\r\n\r\n// const promise1 = Promise.resolve(\"Wow made promise!\");\r\n// const promise2 = 10;\r\n// const promise3 = new Promise((resolve, reject) => {\r\n//   setTimeout(resolve, 2000, \"GoodBye\");\r\n// });\r\n\r\n// Promise.all([promise1, promise2, promise3]).then(values => {\r\n//   console.log(values);\r\n// });\r\n\r\n// ? Added one more promise\r\n\r\n// const promise1 = Promise.resolve(\"Wow made promise!\");\r\n// const promise2 = 10;\r\n// const promise3 = new Promise((resolve, reject) => {\r\n//   setTimeout(() => {\r\n//     resolve ? resolve(\"promise resolved :-)\") : reject(\"promise rejected :-(\");\r\n//   }, 2000);\r\n// });\r\n\r\n// const promise4 = fetch(\"https://jsonplaceholder.typicode.com/users\").then(res =>\r\n//   res.json()\r\n// );\r\n\r\n// Promise.all([promise1, promise2, promise3, promise4]).then(values => {\r\n//   console.log(values);\r\n// });\r\n\r\n//  ? Another example - Handling Multiple JavaScript Promises Even if Some Fail\r\n\r\n// var p1 = new Promise(function(resolve, reject) {\r\n//   resolve(\"one\");\r\n// });\r\n\r\n// var p2 = new Promise(function(resolve, reject) {\r\n//   reject(\"p2 rejected\");\r\n// });\r\n\r\n// var p3 = new Promise(function(resolve, reject) {\r\n//   resolve(\"three\");\r\n// });\r\n\r\n// Promise.all([p1, p2, p3])\r\n//   .then(function(res) {\r\n//     console.log(\"Promise.all\", res);\r\n//   })\r\n//   .catch(function(err) {\r\n//     console.error(\"Promise.all error:- \", err);\r\n//   });\r\n\r\n// ? another example by fixing reslove Promises\r\n\r\nfunction apiRequest(url) {\r\n  return new Promise(function(resolve, reject) {\r\n    //our fake api simply returns the string passed as the 'url'\r\n    if (url) {\r\n      resolve(url);\r\n    } else {\r\n      //if no url is passed to the function, it will fail\r\n      reject(\"apiRequest failed!\");\r\n    }\r\n  }).catch(function(err) {\r\n    //return error;\r\n    return err;\r\n  }); //! if catched here then will return resolved promised with failed promises.\r\n  // ! otherwise it will reject and give an error for all.\r\n}\r\n\r\nvar p1 = apiRequest(\"urlOne\");\r\n\r\n//this one will fail\r\nvar p2 = apiRequest();\r\n\r\nvar p3 = apiRequest(\"urlThree\");\r\n\r\nPromise.all([p1, p2, p3])\r\n  .then(function(res) {\r\n    console.log(\"Promise.all\", res);\r\n  })\r\n  .catch(function(err) {\r\n    console.error(\"err\", err);\r\n  });\r\n\r\n//Promise.all [ 'urlOne', 'apiRequest failed!', 'urlThree' ]\r\n"},"lineCount":null}},"hash":"6b395bfab1340bc6c1f1b2b5fb1141ea","cacheData":{"env":{}}}